name: Automated Astro Blog Creator

on:
  schedule:
    # Run every 2 hours at the 0-minute mark
    - cron: '0 0 * * *'
  workflow_dispatch: # Allows manual trigger from GitHub UI

jobs:
  create-and-post-blog:
    runs-on: ubuntu-latest # Linux server to run the script

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Get your code onto the server

    - name: Set up Python
      uses: actions/setup-python@v5 # Set up Python environment
      with:
        python-version: '3.12' # Specify Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Prepare Branding Logo (Optional)
      # If you have a branding logo file in your repo, ensure it's accessible.
      # Example: if your logo is at 'assets/logo.png', uncomment and adjust path.
      # run: cp assets/logo.png . # Copies logo to root if needed by script
      # env:
      #   BRANDING_LOGO_PATH: 'logo.png' # Set this env var if copying to root
      run: echo "No branding logo specified in workflow. Skipping." # Placeholder if not using

    - name: Run Crypto Blog Creator Script
      env:
        # Pass your GitHub Secrets as environment variables to the script
        API_NINJAS_API_KEY: ${{ secrets.API_NINJAS_API_KEY }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        BLOGGER_BLOG_ID: ${{ secrets.BLOGGER_BLOG_ID }}
        GOOGLE_CLIENT_SECRETS_JSON: ${{ secrets.GOOGLE_CLIENT_SECRETS_JSON }}
        GOOGLE_OAUTH_TOKEN_JSON: ${{ secrets.GOOGLE_OAUTH_TOKEN_JSON }}
        TOGETHER_API_KEY: ${{ secrets.TOGETHER_API_KEY }}
        CI: 'true' # Tells the script it's running in a CI environment, skips interactive browser flow

      run: |
        python main.py

    - name: Upload Generated Blogs and Images
      uses: actions/upload-artifact@v4
      with:
        name: generated-blogs-and-images-${{ github.run_id }}
        path: |
          blog_drafts/
          transformed_images/
        retention-days: 7